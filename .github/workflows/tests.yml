name: "Run tests"

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python 3.11.3
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.3'
        cache: 'pip'
        cache-dependency-path: requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_tests.txt
    - uses: iterative/setup-cml@v1
    - uses: iterative/setup-dvc@v1
    - name: Get data
      run: dvc pull
      env:
        GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
    - name: Test with pytest
      run: |
        pytest -v tests/
    - name: Run isort
      run: |
        pip install isort
        isort --profile black .
    - name: Run black
      run: |
        pip install black
        black .
    - name: Run mypy
      run: |
        pip install mypy
        mypy .
    - name: Train model
      run: python -m src.model.train_cml data/raw models
    - name: Write_report
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "## CML report" >> report.md
        echo '![](./confusion_matrix.png)' >> report.md
        cat clf_report.txt >> report.md
        cml comment create report.md
    - name: Build the training docker image
      run: |
        echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin docker.io
        docker build . --file trainer.dockerfile \
            --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:$GITHUB_SHA
        docker push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:$GITHUB_SHA
